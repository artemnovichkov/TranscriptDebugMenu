{
  "includedArchiveIdentifiers" : [
    "TranscriptDebugMenu"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "TranscriptDebugMenu",
            "type" : "groupMarker"
          },
          {
            "path" : "\/tutorials\/transcriptdebugmenu\/usingtranscriptdebugmenu",
            "title" : "Using TranscriptDebugMenu",
            "type" : "project"
          }
        ],
        "path" : "\/tutorials\/transcriptdebugmenu",
        "title" : "Meet TranscriptDebugMenu",
        "type" : "overview"
      },
      {
        "children" : [
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/init(session:)",
                "title" : "init(session: LanguageModelSession)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(activationpoint:)-1cpab",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(activationpoint:)-25mio",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-75z54",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-78twm",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-8fma1",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-8mhra",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:)-2696p",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:)-2vzfe",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:isenabled:)-12vxv",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:isenabled:)-3b3qb",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-1dhb8",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-2zbvq",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-3auhj",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-4muqn",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-5fdcm",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-5th7f",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-79y0c",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-7n8j0",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-7viep",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-9u6gr",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-ha9c",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-k3pd",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-1bll0",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-38i2s",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-6qu2p",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-9arbg",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-4se4l",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-6wcr7",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-8zup5",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-939jb",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-3d9g8",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-4rea0",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-8pc2",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-xj9z",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-2r81f",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-3wkrs",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-9qclp",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-rbmi",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-68pjs",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-6a2qw",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-6cl9s",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-87i6n",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-1c4e8",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-1j81t",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-47dda",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-pssa",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-5anma",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-9hgp8",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-la6f",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-1qka8",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-1rdey",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-4thlj",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-3rl4t",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-5wszi",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-6m8a9",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-ev8g",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-4f7uy",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-6njzp",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-6t6d9",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-8qvew",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-3geuj",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-793eb",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-9ib9y",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-9ua01",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-ekvk",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-240vg",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-3az77",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-5o46f",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-5r5wb",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-83gsk",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-4t22e",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-6tnzw",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-8bll0",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-97ssq",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-rn50",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-2gi1g",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-2ks4",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-3s5ed",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-47gg9",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-7n55n",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-29uqc",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6432",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6l16j",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6u2dc",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-2tbe6",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-35xx8",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-8g5j1",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-8xlhd",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-5rwlo",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-7s9tb",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-9ar9n",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-9ifet",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-5s7yf",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-7y8g3",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-85ev5",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-9lbdv",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-1ijzx",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-7lfnd",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-9ewqp",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-fte8",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-2hpzz",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-573b4",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-60lh0",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-7kfo8",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-30yic",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-35kzy",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-3y8qj",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-4iezo",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alignmentguide(_:computevalue:)-1dlqa",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alignmentguide(_:computevalue:)-55ob",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alternatingrowbackgrounds(_:)",
                    "title" : "func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/aspectratio(_:contentmode:)-43ft3",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/aspectratio(_:contentmode:)-5hhvp",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-28sec",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-5ch3k",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-cu1o",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:in:fillstyle:)-2d02i",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:in:fillstyle:)-6aj4c",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(in:fillstyle:)-3j2af",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(in:fillstyle:)-7vcu2",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-34pkn",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-57g1m",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-57ngx",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-9xfgf",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-flv6",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonstyle(_:)-90t0i",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonstyle(_:)-vr6z",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1r9bo",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4oh7p",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-85zhq",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-dp7l",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1tzon",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2sxp2",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4jht4",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zz47",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-47vnt",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7zl3b",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-96oev",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-qmy2",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1q8js",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2t3w7",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6l54z",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-81m6p",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containershape(_:)-3hk3t",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containershape(_:)-690fu",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:_:for:)-68jn",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:_:for:)-93yef",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttoolbar(for:content:)-49axt",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttoolbar(for:content:)-7666q",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlsize(_:)-40nkr",
                    "title" : "func controlSize<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlsize(_:)-5etbs",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/copyable(_:)",
                    "title" : "func copyable<T>(@autoclosure () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/cuttable(for:action:)",
                    "title" : "func cuttable<T>(for: T.Type, action: () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogpreventsapptermination(_:)",
                    "title" : "func dialogPreventsAppTermination(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogseverity(_:)",
                    "title" : "func dialogSeverity(DialogSeverity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-2tadk",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-4qoa5",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-6oqdj",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-wjqv",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-2feeh",
                    "title" : "func dismissalConfirmationDialog<A>(LocalizedStringKey, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-4cfrg",
                    "title" : "func dismissalConfirmationDialog<A>(LocalizedStringResource, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-4nfki",
                    "title" : "func dismissalConfirmationDialog<A>(Text, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-63emm",
                    "title" : "func dismissalConfirmationDialog<S, A>(S, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-58cj6",
                    "title" : "func dismissalConfirmationDialog<A, M>(LocalizedStringResource, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-8dt0m",
                    "title" : "func dismissalConfirmationDialog<S, A, M>(S, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-8r6ti",
                    "title" : "func dismissalConfirmationDialog<A, M>(LocalizedStringKey, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-utdl",
                    "title" : "func dismissalConfirmationDialog<A, M>(Text, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragconfiguration(_:)",
                    "title" : "func dragConfiguration(DragConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:in:_:)-3cdbf",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, (Item.ID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:in:_:)-9mfup",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:itemid:in:_:)-7c7k9",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, itemID: KeyPath<Item, ItemID>, in: Namespace.ID?, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:itemid:in:_:)-940a3",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, itemID: KeyPath<Item, ItemID>, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainerselection(_:containernamespace:)",
                    "title" : "func dragContainerSelection<ItemID>(@autoclosure () -> Array<ItemID>, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragpreviewsformation(_:)",
                    "title" : "func dragPreviewsFormation(DragDropPreviewsFormation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:containernamespace:_:)",
                    "title" : "func draggable<Item>(Item.Type, containerNamespace: Namespace.ID?, () -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:id:containernamespace:_:)",
                    "title" : "func draggable<Item, ItemID>(Item.Type, id: KeyPath<Item, ItemID>, containerNamespace: Namespace.ID?, () -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:id:item:containernamespace:)",
                    "title" : "func draggable<Item, ItemID>(Item.Type, id: KeyPath<Item, ItemID>, item: @autoclosure () -> Item?, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:item:containernamespace:)",
                    "title" : "func draggable<Item>(Item.Type, item: @autoclosure () -> Item?, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(containeritemid:containernamespace:)",
                    "title" : "func draggable<ItemID>(containerItemID: ItemID, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropconfiguration(_:)",
                    "title" : "func dropConfiguration((DropSession) -> DropConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/droppreviewsformation(_:)",
                    "title" : "func dropPreviewsFormation(DragDropPreviewsFormation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dynamictypesize(_:)-285z8",
                    "title" : "func dynamicTypeSize<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dynamictypesize(_:)-6qu36",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportabletoservices(_:)",
                    "title" : "func exportableToServices<T>(@autoclosure () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportabletoservices(_:onedit:)",
                    "title" : "func exportableToServices<T>(@autoclosure () -> [T], onEdit: ([T]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportsitemproviders(_:onexport:)",
                    "title" : "func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportsitemproviders(_:onexport:onedit:)",
                    "title" : "func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-46oge",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-673vl",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-7d46h",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-7g48n",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-42ntv",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-82wt7",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-8dggk",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-l9e",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-413g4",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-szz3",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7zdpo",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9xtp0",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1lbwx",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4hfv5",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2xc29",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-igso",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-32wip",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-56671",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-6fw3i",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-o8iz",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusscope(_:)",
                    "title" : "func focusScope(Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focussection()",
                    "title" : "func focusSection() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:onfocuschange:)",
                    "title" : "func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedobject(_:)-3vlyc",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedobject(_:)-6v8pp",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedsceneobject(_:)-7cg6v",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedsceneobject(_:)-9myny",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:_:)-69e5t",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:_:)-7p09u",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:_:)-5bpf1",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:_:)-8f5rj",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:)",
                    "title" : "func gesture(some NSGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-1fpo1",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-3xj1",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-6jy2g",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-8gm",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/horizontalradiogrouplayout()",
                    "title" : "func horizontalRadioGroupLayout() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/importablefromservices(for:action:)",
                    "title" : "func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/importsitemproviders(_:onimport:)",
                    "title" : "func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:)-1pssh",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:)-4yke5",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-1s5ep",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-4jnj6",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-5hbdm",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-7txe4",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listitemtint(_:)-23ey0",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listitemtint(_:)-404ac",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menubuttonstyle(_:)",
                    "title" : "func menuButtonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/modifierkeyalternate(_:_:)",
                    "title" : "func modifierKeyAlternate<V>(EventModifiers, () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-2oyyf",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-7gl67",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-9fnhg",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-1aij8",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-5fn7o",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-8rmvf",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:)-1nnv",
                    "title" : "func navigationDocument<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:)-4v70j",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-4f5nq",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-4l58d",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-7wh1k",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-9q9vb",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-3tsw7",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-6xunk",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-7bs5b",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-8zep1",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-2rdtw",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-3t4y9",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-4n6vu",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-6hzbq",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-6qjdn",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-9n3f5",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:initial:_:)-5afz6",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:initial:_:)-6nizw",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncommand(_:perform:)",
                    "title" : "func onCommand(Selector, perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinuoushover(coordinatespace:perform:)-9a1ai",
                    "title" : "func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinuoushover(coordinatespace:perform:)-9i9it",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncopycommand(perform:)",
                    "title" : "func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncutcommand(perform:)",
                    "title" : "func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondeletecommand(perform:)",
                    "title" : "func onDeleteCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondragsessionupdated(_:)",
                    "title" : "func onDragSessionUpdated((DragSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:delegate:)-1pnzc",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:delegate:)-6paba",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-17k4q",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-4ock8",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-8wc78",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-vtfe",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondropsessionupdated(_:)",
                    "title" : "func onDropSessionUpdated((DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onexitcommand(perform:)",
                    "title" : "func onExitCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ongeometrychange(for:of:action:)-8ispd",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ongeometrychange(for:of:action:)-9htt5",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oninteractiveresizechange(_:)",
                    "title" : "func onInteractiveResizeChange((Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onmodifierkeyschanged(mask:initial:_:)",
                    "title" : "func onModifierKeysChanged(mask: EventModifiers, initial: Bool, (EventModifiers, EventModifiers) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onmovecommand(perform:)",
                    "title" : "func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:perform:)-29mzv",
                    "title" : "func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:perform:)-3224c",
                    "title" : "func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:validator:perform:)-2hd0a",
                    "title" : "func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:validator:perform:)-2k4df",
                    "title" : "func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onplaypausecommand(perform:)",
                    "title" : "func onPlayPauseCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollphasechange(_:)-7rc30",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollphasechange(_:)-970b",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:coordinatespace:perform:)-1gkg5",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:coordinatespace:perform:)-1oe6",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:)-2iymw",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:)-8zky5",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pagecommand(value:in:step:)",
                    "title" : "func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pastedestination(for:action:validator:)",
                    "title" : "func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pointerstyle(_:)",
                    "title" : "func pointerStyle(PointerStyle?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pointervisibility(_:)",
                    "title" : "func pointerVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/prefersdefaultfocus(_:in:)",
                    "title" : "func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationpreventsapptermination(_:)",
                    "title" : "func presentationPreventsAppTermination(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentedwindowstyle(_:)",
                    "title" : "func presentedWindowStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentedwindowtoolbarstyle(_:)",
                    "title" : "func presentedWindowToolbarStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/renameaction(_:)-4csr",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/renameaction(_:)-6qqc8",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareabar(edge:alignment:spacing:content:)-3pwoh",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareabar(edge:alignment:spacing:content:)-9725",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareainset(edge:alignment:spacing:content:)-15ii9",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareainset(edge:alignment:spacing:content:)-18ubx",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:)-8mb0m",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:)-9cx98",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(_:anchor:)-1g2q5",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(_:anchor:)-22iyq",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchcompletion(_:)-6rxni",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchcompletion(_:)-822o8",
                    "title" : "func searchCompletion<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-11xoa",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-73wpt",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7cmt6",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9y852",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-19er5",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-553su",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-97qda",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-9gtvy",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1pn3f",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1v9nk",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1vyt5",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-3eks7",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-4srpr",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-52f38",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-8cqa9",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-8lhzu",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-1ati4",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-46r43",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-6n6o9",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-25sq",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-3ipcs",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-58b0o",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-9qpk4",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-1srmd",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-4gtvq",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-4unwp",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-netx",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-459s5",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7e4i6",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7jzzr",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-fc41",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6wlyp",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-830uk",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ekrs",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-nt4x",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionindexlabel(_:)-4me3c",
                    "title" : "func sectionIndexLabel<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionindexlabel(_:)-72ppw",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(trigger:_:)-560pk",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(trigger:_:)-5w81v",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsearchactivation(_:)",
                    "title" : "func tabViewSearchActivation(TabSearchActivation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textcontenttype(_:)",
                    "title" : "func textContentType(NSTextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputcompletion(_:)",
                    "title" : "func textInputCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:)",
                    "title" : "func textInputSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:content:)",
                    "title" : "func textInputSuggestions<Data, Content>(Data, content: (Data.Element) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:id:content:)",
                    "title" : "func textInputSuggestions<Data, ID, Content>(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tint(_:)-21osu",
                    "title" : "func tint<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tint(_:)-8l20y",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(content:)-8xu44",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(content:)-dbjk",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackground(_:for:)-3itit",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackground(_:for:)-67lzw",
                    "title" : "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbaritemhidden(_:)",
                    "title" : "func toolbarItemHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbar(_:)",
                    "title" : "func touchBar<Content>(TouchBar<Content>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbar(content:)",
                    "title" : "func touchBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbarcustomizationlabel(_:)",
                    "title" : "func touchBarCustomizationLabel(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbaritempresence(_:)",
                    "title" : "func touchBarItemPresence(TouchBarItemPresence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbaritemprincipal(_:)",
                    "title" : "func touchBarItemPrincipal(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transition(_:)-2f1c5",
                    "title" : "func transition<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transition(_:)-2sazi",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-17q50",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-3d9zn",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-3xccl",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-7zpj1",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typesettinglanguage(_:isenabled:)-2udce",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typesettinglanguage(_:isenabled:)-8ox2p",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowdismissbehavior(_:)",
                    "title" : "func windowDismissBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowfullscreenbehavior(_:)",
                    "title" : "func windowFullScreenBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowminimizebehavior(_:)",
                    "title" : "func windowMinimizeBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowresizeanchor(_:)",
                    "title" : "func windowResizeAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowresizebehavior(_:)",
                    "title" : "func windowResizeBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(activationpoint:)-1cpab",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(activationpoint:)-25mio",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-75z54",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-78twm",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-8fma1",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaction(named:_:)-8mhra",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:)-2696p",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:)-2vzfe",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:isenabled:)-12vxv",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityactivationpoint(_:isenabled:)-3b3qb",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-1dhb8",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-2zbvq",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-3auhj",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-4muqn",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-5fdcm",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-5th7f",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-79y0c",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-7n8j0",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-7viep",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-9u6gr",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-ha9c",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitycustomcontent(_:_:importance:)-k3pd",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-1bll0",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-38i2s",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-6qu2p",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:)-9arbg",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-4se4l",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-6wcr7",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-8zup5",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydragpoint(_:description:isenabled:)-939jb",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-3d9g8",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-4rea0",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-8pc2",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:)-xj9z",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-2r81f",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-3wkrs",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-9qclp",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitydroppoint(_:description:isenabled:)-rbmi",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-68pjs",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-6a2qw",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-6cl9s",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:)-87i6n",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-1c4e8",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-1j81t",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-47dda",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityhint(_:isenabled:)-pssa",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-5anma",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-9hgp8",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:)-la6f",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-1qka8",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-1rdey",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityinputlabels(_:isenabled:)-4thlj",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-3rl4t",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-5wszi",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-6m8a9",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:)-ev8g",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-4f7uy",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-6njzp",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-6t6d9",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(_:isenabled:)-8qvew",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-3geuj",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-793eb",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-9ib9y",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-9ua01",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:)-ekvk",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-240vg",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-3az77",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-5o46f",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-5r5wb",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entryid:entrylabel:)-83gsk",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-4t22e",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-6tnzw",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-8bll0",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-97ssq",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:entries:entrylabel:)-rn50",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-2gi1g",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-2ks4",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-3s5ed",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-47gg9",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotor(_:textranges:)-7n55n",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-29uqc",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6432",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6l16j",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityscrollstatus(_:isenabled:)-6u2dc",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-2tbe6",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-35xx8",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-8g5j1",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:)-8xlhd",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-5rwlo",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-7s9tb",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-9ar9n",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityvalue(_:isenabled:)-9ifet",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-5s7yf",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-7y8g3",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-85ev5",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:)-9lbdv",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-1ijzx",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-7lfnd",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-9ewqp",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:actions:message:)-fte8",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-2hpzz",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-573b4",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-60lh0",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:)-7kfo8",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-30yic",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-35kzy",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-3y8qj",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(_:ispresented:presenting:actions:message:)-4iezo",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alignmentguide(_:computevalue:)-1dlqa",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alignmentguide(_:computevalue:)-55ob",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/alternatingrowbackgrounds(_:)",
                    "title" : "func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/aspectratio(_:contentmode:)-43ft3",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/aspectratio(_:contentmode:)-5hhvp",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-28sec",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-5ch3k",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/attributedtextformattingdefinition(_:)-cu1o",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:in:fillstyle:)-2d02i",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(_:in:fillstyle:)-6aj4c",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(in:fillstyle:)-3j2af",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/background(in:fillstyle:)-7vcu2",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-34pkn",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-57g1m",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-57ngx",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-9xfgf",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badge(_:)-flv6",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonstyle(_:)-90t0i",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/buttonstyle(_:)-vr6z",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1r9bo",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4oh7p",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-85zhq",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:)-dp7l",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1tzon",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2sxp2",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4jht4",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zz47",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-47vnt",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7zl3b",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-96oev",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-qmy2",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1q8js",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2t3w7",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6l54z",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-81m6p",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containershape(_:)-3hk3t",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containershape(_:)-690fu",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:_:for:)-68jn",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:_:for:)-93yef",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttoolbar(for:content:)-49axt",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttoolbar(for:content:)-7666q",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlsize(_:)-40nkr",
                    "title" : "func controlSize<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/controlsize(_:)-5etbs",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/copyable(_:)",
                    "title" : "func copyable<T>(@autoclosure () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/cuttable(for:action:)",
                    "title" : "func cuttable<T>(for: T.Type, action: () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogpreventsapptermination(_:)",
                    "title" : "func dialogPreventsAppTermination(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogseverity(_:)",
                    "title" : "func dialogSeverity(DialogSeverity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-2tadk",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-4qoa5",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-6oqdj",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(_:issuppressed:)-wjqv",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-2feeh",
                    "title" : "func dismissalConfirmationDialog<A>(LocalizedStringKey, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-4cfrg",
                    "title" : "func dismissalConfirmationDialog<A>(LocalizedStringResource, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-4nfki",
                    "title" : "func dismissalConfirmationDialog<A>(Text, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:)-63emm",
                    "title" : "func dismissalConfirmationDialog<S, A>(S, shouldPresent: Bool, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-58cj6",
                    "title" : "func dismissalConfirmationDialog<A, M>(LocalizedStringResource, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-8dt0m",
                    "title" : "func dismissalConfirmationDialog<S, A, M>(S, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-8r6ti",
                    "title" : "func dismissalConfirmationDialog<A, M>(LocalizedStringKey, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dismissalconfirmationdialog(_:shouldpresent:actions:message:)-utdl",
                    "title" : "func dismissalConfirmationDialog<A, M>(Text, shouldPresent: Bool, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragconfiguration(_:)",
                    "title" : "func dragConfiguration(DragConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:in:_:)-3cdbf",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, (Item.ID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:in:_:)-9mfup",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:itemid:in:_:)-7c7k9",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, itemID: KeyPath<Item, ItemID>, in: Namespace.ID?, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainer(for:itemid:in:_:)-940a3",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, itemID: KeyPath<Item, ItemID>, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragcontainerselection(_:containernamespace:)",
                    "title" : "func dragContainerSelection<ItemID>(@autoclosure () -> Array<ItemID>, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dragpreviewsformation(_:)",
                    "title" : "func dragPreviewsFormation(DragDropPreviewsFormation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:containernamespace:_:)",
                    "title" : "func draggable<Item>(Item.Type, containerNamespace: Namespace.ID?, () -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:id:containernamespace:_:)",
                    "title" : "func draggable<Item, ItemID>(Item.Type, id: KeyPath<Item, ItemID>, containerNamespace: Namespace.ID?, () -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:id:item:containernamespace:)",
                    "title" : "func draggable<Item, ItemID>(Item.Type, id: KeyPath<Item, ItemID>, item: @autoclosure () -> Item?, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:item:containernamespace:)",
                    "title" : "func draggable<Item>(Item.Type, item: @autoclosure () -> Item?, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/draggable(containeritemid:containernamespace:)",
                    "title" : "func draggable<ItemID>(containerItemID: ItemID, containerNamespace: Namespace.ID?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropconfiguration(_:)",
                    "title" : "func dropConfiguration((DropSession) -> DropConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/droppreviewsformation(_:)",
                    "title" : "func dropPreviewsFormation(DragDropPreviewsFormation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dynamictypesize(_:)-285z8",
                    "title" : "func dynamicTypeSize<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/dynamictypesize(_:)-6qu36",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportabletoservices(_:)",
                    "title" : "func exportableToServices<T>(@autoclosure () -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportabletoservices(_:onedit:)",
                    "title" : "func exportableToServices<T>(@autoclosure () -> [T], onEdit: ([T]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportsitemproviders(_:onexport:)",
                    "title" : "func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/exportsitemproviders(_:onexport:onedit:)",
                    "title" : "func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-46oge",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-673vl",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-7d46h",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogconfirmationlabel(_:)-7g48n",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-42ntv",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-82wt7",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-8dggk",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogmessage(_:)-l9e",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-413g4",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-szz3",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7zdpo",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9xtp0",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1lbwx",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4hfv5",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2xc29",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-igso",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-32wip",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-56671",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-6fw3i",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileexporterfilenamelabel(_:)-o8iz",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusscope(_:)",
                    "title" : "func focusScope(Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focussection()",
                    "title" : "func focusSection() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusable(_:onfocuschange:)",
                    "title" : "func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedobject(_:)-3vlyc",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedobject(_:)-6v8pp",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedsceneobject(_:)-7cg6v",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedsceneobject(_:)-9myny",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:_:)-69e5t",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedscenevalue(_:_:)-7p09u",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:_:)-5bpf1",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/focusedvalue(_:_:)-8f5rj",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:)",
                    "title" : "func gesture(some NSGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-1fpo1",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-3xj1",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-6jy2g",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/help(_:)-8gm",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/horizontalradiogrouplayout()",
                    "title" : "func horizontalRadioGroupLayout() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/importablefromservices(for:action:)",
                    "title" : "func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/importsitemproviders(_:onimport:)",
                    "title" : "func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:)-1pssh",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:)-4yke5",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-1s5ep",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-4jnj6",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-5hbdm",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:)-7txe4",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listitemtint(_:)-23ey0",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listitemtint(_:)-404ac",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menubuttonstyle(_:)",
                    "title" : "func menuButtonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/modifierkeyalternate(_:_:)",
                    "title" : "func modifierKeyAlternate<V>(EventModifiers, () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-2oyyf",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-7gl67",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:)-9fnhg",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-1aij8",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-5fn7o",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationbartitle(_:displaymode:)-8rmvf",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:)-1nnv",
                    "title" : "func navigationDocument<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:)-4v70j",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-4f5nq",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-4l58d",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-7wh1k",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationdocument(_:preview:)-9q9vb",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-3tsw7",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-6xunk",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-7bs5b",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationsubtitle(_:)-8zep1",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-2rdtw",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-3t4y9",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-4n6vu",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-6hzbq",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-6qjdn",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtitle(_:)-9n3f5",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:initial:_:)-5afz6",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:initial:_:)-6nizw",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncommand(_:perform:)",
                    "title" : "func onCommand(Selector, perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinuoushover(coordinatespace:perform:)-9a1ai",
                    "title" : "func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncontinuoushover(coordinatespace:perform:)-9i9it",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncopycommand(perform:)",
                    "title" : "func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oncutcommand(perform:)",
                    "title" : "func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondeletecommand(perform:)",
                    "title" : "func onDeleteCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondragsessionupdated(_:)",
                    "title" : "func onDragSessionUpdated((DragSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:delegate:)-1pnzc",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:delegate:)-6paba",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-17k4q",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-4ock8",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-8wc78",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondrop(of:istargeted:perform:)-vtfe",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ondropsessionupdated(_:)",
                    "title" : "func onDropSessionUpdated((DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onexitcommand(perform:)",
                    "title" : "func onExitCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ongeometrychange(for:of:action:)-8ispd",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ongeometrychange(for:of:action:)-9htt5",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/oninteractiveresizechange(_:)",
                    "title" : "func onInteractiveResizeChange((Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onmodifierkeyschanged(mask:initial:_:)",
                    "title" : "func onModifierKeysChanged(mask: EventModifiers, initial: Bool, (EventModifiers, EventModifiers) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onmovecommand(perform:)",
                    "title" : "func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:perform:)-29mzv",
                    "title" : "func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:perform:)-3224c",
                    "title" : "func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:validator:perform:)-2hd0a",
                    "title" : "func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpastecommand(of:validator:perform:)-2k4df",
                    "title" : "func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onplaypausecommand(perform:)",
                    "title" : "func onPlayPauseCommand(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollphasechange(_:)-7rc30",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollphasechange(_:)-970b",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:coordinatespace:perform:)-1gkg5",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:coordinatespace:perform:)-1oe6",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:)-2iymw",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:)-8zky5",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pagecommand(value:in:step:)",
                    "title" : "func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pastedestination(for:action:validator:)",
                    "title" : "func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pointerstyle(_:)",
                    "title" : "func pointerStyle(PointerStyle?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/pointervisibility(_:)",
                    "title" : "func pointerVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/popover(item:attachmentanchor:arrowedge:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/prefersdefaultfocus(_:in:)",
                    "title" : "func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationpreventsapptermination(_:)",
                    "title" : "func presentationPreventsAppTermination(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentedwindowstyle(_:)",
                    "title" : "func presentedWindowStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/presentedwindowtoolbarstyle(_:)",
                    "title" : "func presentedWindowToolbarStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/renameaction(_:)-4csr",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/renameaction(_:)-6qqc8",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareabar(edge:alignment:spacing:content:)-3pwoh",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareabar(edge:alignment:spacing:content:)-9725",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareainset(edge:alignment:spacing:content:)-15ii9",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareainset(edge:alignment:spacing:content:)-18ubx",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:)-8mb0m",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:)-9cx98",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(_:anchor:)-1g2q5",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(_:anchor:)-22iyq",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchcompletion(_:)-6rxni",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchcompletion(_:)-822o8",
                    "title" : "func searchCompletion<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-11xoa",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-73wpt",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7cmt6",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9y852",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-19er5",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-553su",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-97qda",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:editabletokens:placement:prompt:token:)-9gtvy",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1pn3f",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1v9nk",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-1vyt5",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:ispresented:placement:prompt:)-3eks7",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-4srpr",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-52f38",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-8cqa9",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:)-8lhzu",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-1ati4",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-46r43",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:placement:prompt:suggestions:)-6n6o9",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-25sq",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-3ipcs",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-58b0o",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:ispresented:placement:prompt:token:)-9qpk4",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-1srmd",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-4gtvq",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-4unwp",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:placement:prompt:token:)-netx",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-459s5",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7e4i6",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7jzzr",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-fc41",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6wlyp",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-830uk",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ekrs",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-nt4x",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionindexlabel(_:)-4me3c",
                    "title" : "func sectionIndexLabel<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sectionindexlabel(_:)-72ppw",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(trigger:_:)-560pk",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sensoryfeedback(trigger:_:)-5w81v",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsearchactivation(_:)",
                    "title" : "func tabViewSearchActivation(TabSearchActivation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textcontenttype(_:)",
                    "title" : "func textContentType(NSTextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputcompletion(_:)",
                    "title" : "func textInputCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:)",
                    "title" : "func textInputSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:content:)",
                    "title" : "func textInputSuggestions<Data, Content>(Data, content: (Data.Element) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textinputsuggestions(_:id:content:)",
                    "title" : "func textInputSuggestions<Data, ID, Content>(Data, id: KeyPath<Data.Element, ID>, content: (Data.Element) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tint(_:)-21osu",
                    "title" : "func tint<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tint(_:)-8l20y",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(content:)-8xu44",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(content:)-dbjk",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackground(_:for:)-3itit",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackground(_:for:)-67lzw",
                    "title" : "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbaritemhidden(_:)",
                    "title" : "func toolbarItemHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbar(_:)",
                    "title" : "func touchBar<Content>(TouchBar<Content>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbar(content:)",
                    "title" : "func touchBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbarcustomizationlabel(_:)",
                    "title" : "func touchBarCustomizationLabel(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbaritempresence(_:)",
                    "title" : "func touchBarItemPresence(TouchBarItemPresence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/touchbaritemprincipal(_:)",
                    "title" : "func touchBarItemPrincipal(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transition(_:)-2f1c5",
                    "title" : "func transition<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/transition(_:)-2sazi",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-17q50",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-3d9zn",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-3xccl",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typeselectequivalent(_:)-7zpj1",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typesettinglanguage(_:isenabled:)-2udce",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/typesettinglanguage(_:isenabled:)-8ox2p",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowdismissbehavior(_:)",
                    "title" : "func windowDismissBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowfullscreenbehavior(_:)",
                    "title" : "func windowFullScreenBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowminimizebehavior(_:)",
                    "title" : "func windowMinimizeBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowresizeanchor(_:)",
                    "title" : "func windowResizeAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowresizebehavior(_:)",
                    "title" : "func windowResizeBehavior(WindowInteractionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/transcriptdebugmenu\/transcriptdebugmenu",
            "title" : "TranscriptDebugMenu",
            "type" : "struct"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Extended Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/transcriptdebugmenu\/foundationmodels\/transcript\/entry\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/transcriptdebugmenu\/foundationmodels\/transcript\/entry\/hashable-implementations",
                        "title" : "Hashable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/transcriptdebugmenu\/foundationmodels\/transcript\/entry",
                    "title" : "Transcript.Entry",
                    "type" : "extension"
                  }
                ],
                "path" : "\/documentation\/transcriptdebugmenu\/foundationmodels\/transcript",
                "title" : "Transcript",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/transcriptdebugmenu\/foundationmodels",
            "title" : "FoundationModels",
            "type" : "extension"
          },
          {
            "children" : [
              {
                "title" : "Extended Protocols",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/transcriptdebugmenu\/swiftuicore\/view\/transcriptdebugmenu(_:ispresented:)",
                    "title" : "func transcriptDebugMenu(LanguageModelSession, isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/transcriptdebugmenu\/swiftuicore\/view",
                "title" : "View",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/transcriptdebugmenu\/swiftuicore",
            "title" : "SwiftUICore",
            "type" : "extension"
          }
        ],
        "icon" : "screenshot.png",
        "path" : "\/documentation\/transcriptdebugmenu",
        "title" : "TranscriptDebugMenu",
        "type" : "module"
      }
    ]
  },
  "references" : {
    "screenshot.png" : {
      "alt" : "TranscriptDebugMenu",
      "identifier" : "screenshot.png",
      "type" : "image",
      "variants" : [
        {
          "traits" : [
            "2x",
            "light"
          ],
          "url" : "\/images\/TranscriptDebugMenu\/screenshot@2x.png"
        },
        {
          "traits" : [
            "2x",
            "dark"
          ],
          "url" : "\/images\/TranscriptDebugMenu\/screenshot~dark@2x.png"
        }
      ]
    }
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}